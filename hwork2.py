
#В данном контексте применима парадигма императивного программирования, поскольку таблица
#умножения строится последовательно, и каждое вычисление имеет зависимость от предыдущего.
#Это решение основывается на использовании вложенного цикла for в процедурном стиле
#для итерации от 1 до 10 и вывода строки умножения на каждой итерации.

#Основания для выбора подхода:
#1. Последовательное выполнение вычислений, начиная с проверки введенного числа и заканчивая генерацией и выводом таблицы умножения.
#2. Императивный характер подхода, соответствующий задаче.
#3. Легкость чтения и понимания кода, что немаловажно для обеспечения прозрачности решения.

n=5
def print_mult_table(n):
        for i in range(1, n + 1):
            for j in range(1, 10):
                print(f"{i} * {j} = {i*j}")
            print("--------------------------")

print_mult_table(n)